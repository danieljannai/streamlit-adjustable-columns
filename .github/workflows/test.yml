name: Test

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, "3.10", "3.11"]

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip packages
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt', '**/setup.py') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"
        pip install -r requirements-dev.txt
    
    - name: Install Playwright browsers
      run: |
        playwright install --with-deps firefox chromium
    
    - name: Lint with flake8
      run: |
        flake8 streamlit_expandable_columns tests --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 streamlit_expandable_columns tests --count --exit-zero --max-complexity=10 --max-line-length=88 --statistics
    
    - name: Check code formatting with black
      run: |
        black --check streamlit_expandable_columns tests
    
    - name: Check import sorting with isort
      run: |
        isort --check-only streamlit_expandable_columns tests
    
    - name: Run unit tests
      run: |
        pytest -v -m "unit or not e2e" --tb=short
    
    - name: Run E2E tests
      run: |
        pytest -v -m "e2e" --tb=short --browser firefox --browser chromium
      env:
        CI: true

  test-build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"
    
    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine
    
    - name: Build package
      run: |
        python -m build
    
    - name: Check package
      run: |
        twine check dist/* 